version: '3.8'

services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=postgrespw
    ports:
      - 5432:5432
    volumes:
      - /var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  inventoryservice:
    build:
      context: ./API/src/InventoryService
    environment:
      - VIRTUAL_HOST=api.stocktrack.local
      - VIRTUAL_PORT=80
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=stocktrack;Username=postgres;Password=postgrespw
    depends_on:
      - postgres

  frontend:
    build:
      context: ./Frontend
    environment:
      - VIRTUAL_HOST=app.stocktrack.local
      - VIRTUAL_PORT=80
    depends_on:
      - inventoryservice

  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./Certificates:/etc/nginx/certs

volumes:
  pgdata:
